wit_bindgen::generate!(in "./wit");

use analyzer::fundamentals::types::*;

struct AnalyzerTemplate;

impl Analyzer for AnalyzerTemplate {
    fn run(_company: FundamentalData) -> Result<AnalyzerOutput, String> {
        Ok(AnalyzerOutput {
            columns: vec![AnalyzerOutputColumn {
                name: "demo".to_string(),
                value: AnalyzerOutputColumnValue::VBool(true),
            }],
        })
    }
}

// The following macro is generated by wit-bindgen and is always named `export_{world_name}`
export_analyzer!(AnalyzerTemplate);
